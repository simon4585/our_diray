<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 로컬 mysql ...139, 160, 326p.log4jdbc 설정후 
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
      <property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/twins"></property>
      <property name="username" value="root"></property>
      <property name="password" value="apmsetup"></property>
      </bean> -->
      
      
      
	<!-- 오라클 접속 -->
    <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
        <property name="url" value="jdbc:log4jdbc:oracle:thin:@localhost:1521/XE"/>
        <property name="username" value="twins"/>
        <property name="password" value="apmsetup"/>
    </bean>
	<!--DataSource 설정으로 JDBC 연결후, MyBatis와 MySql을 연동시킴. 
		SqlSessionFactory : myBatis와 스프링의 Connection 생성. -->		 		
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	   
	 <!--JDBC커넥션을 처리하는 DataSource와 mybatis를 연결-->
	 	<property name="dataSource" ref="dataSource" />
	 	<!--root-context.xml :: sqlSessionFactory 에 매퍼 xml 파일의 경로를 인식하게 함. -->
	 	 <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	 <!-- MyBatis에서 DAO를 이용하는 경우, SqlSessionTemplate라는 것을 이용해서 DAO를 구현함.
		  mybatis-spring에서 제공하는 SqlSessionTempalte객체는 기본적인 트랜잭션 관리나 쓰레드 처리의
		  안정성등을 보장해주고, 개발자들이 직접 DB 연결, 종료작업하는 것을 줄여줌.
		  SqlSessionFactory를 생성자로 주입함.-->
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
	 	  destroy-method="clearCache">
	  <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	 </bean>
	 
	 <context:component-scan base-package="org.edu.dao" />
	 <context:component-scan base-package="org.edu.service" />
	 <context:component-scan base-package="org.edu.aop"></context:component-scan>
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <aop:config></aop:config>
		<!-- 대표적으로 게시판 입력 트랜잭션에서 이용 -->
	 <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	 </bean>
</beans>
